{"ast":null,"code":"import { emailRegex, strongRegex, phoneRegex } from \"./Regex\";\n\nfunction Validation(values) {\n  let errors = {};\n\n  if (!values.name) {\n    errors.name = \"name is require\";\n  }\n\n  if (!values.email) {\n    errors.email = \"email is require\";\n  } else if (emailRegex.test(values.email)) {\n    errors.email = \"invalid email\";\n  }\n\n  if (!values.password) {\n    errors.password = \"password is require\";\n  } else if (strongRegex.test(values.password)) {\n    errors.password = \"invalid password\";\n  }\n\n  if (!values.contact) {\n    errors.contact = \"contact is require\";\n  } else if (phoneRegex.test(values.contact)) {\n    errors.contact = \"only numeric value\";\n  }\n\n  if (!values.city) {\n    errors.city = \"city is require\";\n  }\n\n  if (!values.state) {\n    errors.state = \"state is require\";\n  }\n\n  return errors;\n}\n\n_c = Validation;\nexport default Validation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"sources":["/home/pixlerlab/Desktop/reactLearning/React-project/src/component/Validation.js"],"names":["emailRegex","strongRegex","phoneRegex","Validation","values","errors","name","email","test","password","contact","city","state"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,QAAoD,SAApD;;AACA,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAI,CAACD,MAAM,CAACE,IAAZ,EAAkB;AAChBD,IAAAA,MAAM,CAACC,IAAP,GAAc,iBAAd;AACD;;AACD,MAAI,CAACF,MAAM,CAACG,KAAZ,EAAmB;AACjBF,IAAAA,MAAM,CAACE,KAAP,GAAe,kBAAf;AACD,GAFD,MAEO,IAAIP,UAAU,CAACQ,IAAX,CAAgBJ,MAAM,CAACG,KAAvB,CAAJ,EAAmC;AACxCF,IAAAA,MAAM,CAACE,KAAP,GAAe,eAAf;AACD;;AACD,MAAI,CAACH,MAAM,CAACK,QAAZ,EAAsB;AACpBJ,IAAAA,MAAM,CAACI,QAAP,GAAkB,qBAAlB;AACD,GAFD,MAEO,IAAIR,WAAW,CAACO,IAAZ,CAAiBJ,MAAM,CAACK,QAAxB,CAAJ,EAAuC;AAC5CJ,IAAAA,MAAM,CAACI,QAAP,GAAkB,kBAAlB;AACD;;AACD,MAAI,CAACL,MAAM,CAACM,OAAZ,EAAqB;AACnBL,IAAAA,MAAM,CAACK,OAAP,GAAiB,oBAAjB;AACD,GAFD,MAEO,IAAIR,UAAU,CAACM,IAAX,CAAgBJ,MAAM,CAACM,OAAvB,CAAJ,EAAqC;AAC1CL,IAAAA,MAAM,CAACK,OAAP,GAAiB,oBAAjB;AACD;;AACD,MAAI,CAACN,MAAM,CAACO,IAAZ,EAAkB;AAChBN,IAAAA,MAAM,CAACM,IAAP,GAAc,iBAAd;AACD;;AACD,MAAI,CAACP,MAAM,CAACQ,KAAZ,EAAmB;AACjBP,IAAAA,MAAM,CAACO,KAAP,GAAe,kBAAf;AACD;;AACD,SAAOP,MAAP;AACD;;KA3BQF,U;AA6BT,eAAeA,UAAf","sourcesContent":["import { emailRegex, strongRegex, phoneRegex } from \"./Regex\";\nfunction Validation(values) {\n  let errors = {};\n  if (!values.name) {\n    errors.name = \"name is require\";\n  }\n  if (!values.email) {\n    errors.email = \"email is require\";\n  } else if (emailRegex.test(values.email)) {\n    errors.email = \"invalid email\";\n  }\n  if (!values.password) {\n    errors.password = \"password is require\";\n  } else if (strongRegex.test(values.password)) {\n    errors.password = \"invalid password\";\n  }\n  if (!values.contact) {\n    errors.contact = \"contact is require\";\n  } else if (phoneRegex.test(values.contact)) {\n    errors.contact = \"only numeric value\";\n  }\n  if (!values.city) {\n    errors.city = \"city is require\";\n  }\n  if (!values.state) {\n    errors.state = \"state is require\";\n  }\n  return errors;\n}\n\nexport default Validation;\n"]},"metadata":{},"sourceType":"module"}