{"ast":null,"code":"var _jsxFileName = \"/home/pixlerlab/Desktop/reactLearning/React-project/src/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Col, Form, Button, Row, Container, Card } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"./component/Header\";\nimport { emailRegex, strongRegex, phoneRegex } from \"./component/Regex\"; // import Validation from \"./component/Validation\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register(prop) {\n  _s();\n\n  const [val, setVal] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    contact: \"\"\n  });\n  const [errors, setErrors] = useState(\"\");\n\n  function handleChange(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    setVal({ ...val,\n      [name]: value\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (Validation()) {\n      setVal({\n        val: val\n      });\n    }\n\n    fetch(\"http://localhost:8000/Register\", {\n      method: \"Post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(val)\n    }).then(reqs => {\n      reqs.json().then(result => {\n        console.log(result);\n      });\n    });\n    console.log(val);\n    localStorage.setItem(\"UserEmail\", val.email);\n    localStorage.setItem(\"UserPassword\", val.password);\n    prop.history.push(\"/login\");\n    setVal({});\n  }\n\n  function Validation(values) {\n    if (!values.name) {\n      errors.name = \"name is require\";\n    }\n\n    if (!values.email) {\n      errors.email = \"email is require\";\n    } else if (values.email !== emailRegex) {\n      errors.email = \"invalid email\";\n    }\n\n    if (!values.password) {\n      errors.password = \"password is require\";\n    } else if (values.password !== strongRegex) {\n      errors.password = \"invalid password\";\n    }\n\n    if (!values.contact) {\n      errors.contact = \"contact is require\";\n    } else if (values.contact !== phoneRegex) {\n      errors.contact = \"only numeric value\";\n    }\n\n    if (!values.city) {\n      errors.city = \"city is require\";\n    }\n\n    if (!values.state) {\n      errors.state = \"state is require\";\n    }\n\n    setErrors({\n      errors: errors\n    });\n    return errors;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          padding: 100,\n          margin: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              textAlign: \"center\",\n              color: \"blue\"\n            },\n            children: \"Registration Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter name\",\n              name: \"name\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGridEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter email\",\n                name: \"email\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: errors.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGridPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Password\",\n                name: \"password\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formGridContact\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"987654310\",\n              name: \"contact\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGridCity\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"city\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGridCity\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"state\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            id: \"formGridCheckbox\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              label: \"Check me out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              margin: \"0 20px\"\n            },\n            children: \"Aleady have a account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"BS0JYsrRn/xUgZCUli42k4R7PXg=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/pixlerlab/Desktop/reactLearning/React-project/src/Register.js"],"names":["React","useState","Col","Form","Button","Row","Container","Card","Link","Header","emailRegex","strongRegex","phoneRegex","Register","prop","val","setVal","name","email","password","contact","errors","setErrors","handleChange","e","target","value","handleSubmit","preventDefault","Validation","fetch","method","headers","body","JSON","stringify","then","reqs","json","result","console","log","localStorage","setItem","history","push","values","city","state","padding","margin","textAlign","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Col, Form, Button, Row, Container, Card } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"./component/Header\";\nimport { emailRegex, strongRegex, phoneRegex } from \"./component/Regex\";\n// import Validation from \"./component/Validation\";\nexport default function Register(prop) {\n  const [val, setVal] = useState({ name: \"\", email: \"\", password: \"\", contact: \"\" });\n  const [errors, setErrors] = useState(\"\");\n  function handleChange(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    setVal({ ...val, [name]: value });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (Validation()) {\n      setVal({ val: val });\n    }\n    fetch(\"http://localhost:8000/Register\", {\n      method: \"Post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(val),\n    }).then((reqs) => {\n      reqs.json().then((result) => {\n        console.log(result);\n      });\n    });\n\n    console.log(val);\n    localStorage.setItem(\"UserEmail\", val.email);\n    localStorage.setItem(\"UserPassword\", val.password);\n    prop.history.push(\"/login\");\n    setVal({});\n  }\n\n  function Validation(values) {\n    if (!values.name) {\n      errors.name = \"name is require\";\n    }\n    if (!values.email) {\n      errors.email = \"email is require\";\n    } else if (values.email !== emailRegex) {\n      errors.email = \"invalid email\";\n    }\n    if (!values.password) {\n      errors.password = \"password is require\";\n    } else if (values.password !== strongRegex) {\n      errors.password = \"invalid password\";\n    }\n    if (!values.contact) {\n      errors.contact = \"contact is require\";\n    } else if (values.contact !== phoneRegex) {\n      errors.contact = \"only numeric value\";\n    }\n    if (!values.city) {\n      errors.city = \"city is require\";\n    }\n    if (!values.state) {\n      errors.state = \"state is require\";\n    }\n    setErrors({ errors: errors });\n    return errors;\n  }\n\n  return (\n    <div>\n      <Header />\n      <Container>\n        <Card style={{ padding: 100, margin: 120 }}>\n          <Form onSubmit={handleSubmit}>\n            <h1 style={{ textAlign: \"center\", color: \"blue\" }}>Registration Page</h1>\n            <Form.Group as={Col} controlId=\"formGridName\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter name\"\n                name=\"name\"\n                onChange={handleChange}\n              />\n              <div>{errors.name}</div>\n            </Form.Group>\n            <Row className=\"mb-3\">\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter email\"\n                  name=\"email\"\n                  onChange={handleChange}\n                />\n                <div>{errors.name}</div>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                />\n              </Form.Group>\n            </Row>\n            <Form.Group className=\"mb-3\" controlId=\"formGridContact\">\n              <Form.Label>Contact</Form.Label>\n              <Form.Control placeholder=\"987654310\" name=\"contact\" onChange={handleChange} />\n            </Form.Group>\n            <Row className=\"mb-3\">\n              <Form.Group as={Col} controlId=\"formGridCity\">\n                <Form.Label>City</Form.Label>\n                <Form.Control name=\"city\" onChange={handleChange} />\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"formGridCity\">\n                <Form.Label>State</Form.Label>\n                <Form.Control name=\"state\" onChange={handleChange} />\n              </Form.Group>\n            </Row>\n            <Form.Group className=\"mb-3\" id=\"formGridCheckbox\">\n              <Form.Check type=\"checkbox\" label=\"Check me out\" />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Register\n            </Button>\n            <span style={{ margin: \"0 20px\" }}>Aleady have a account</span>\n            <Link to=\"/login\">Login</Link>\n          </Form>\n        </Card>\n      </Container>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}